version: '3.8'

services:
  mlflow:
    build: .
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@mlflow-db/mlflow
      - MLFLOW_ARTIFACT_ROOT=s3://mlflow/
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    command: >
      mlflow server
        --backend-store-uri postgresql://mlflow:mlflow@mlflow-db/mlflow
        --default-artifact-root s3://mlflow/
        --host 0.0.0.0
    depends_on:
      - mlflow-db
      - minio
    networks:
      - mlops-net

  mlflow-db:
    image: postgres:13
    container_name: mlflow-db
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mlops-net

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    volumes:
      - minio_data:/data
    networks:
      - mlops-net

  create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 minio minio123;
      if ! mc ls myminio/mlflow >/dev/null 2>&1; then
        mc mb myminio/mlflow;
      fi;
      mc anonymous set download myminio/mlflow;
      exit 0;
      "
    networks:
      - mlops-net

volumes:
  pgdata:
  minio_data:

networks:
  mlops-net:
    driver: bridge
